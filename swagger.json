{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "Node.js Application API",
      "description": "Node.js Application API",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "host": "localhost:3000",
    "basePath": "",
    "tags": [
      {
        "name": "Users",
        "description": "API for users in the system"
      },
      {
        "name": "Posts",
        "description": "API for posts in the system"
      }
    ],
    "schemes": [
      "http", "https"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/users": {
        "post": {
          "tags": [
            "Users"
          ],
          "description": "Create new user in system",
          "parameters": [
            {
              "name": "user",
              "in": "body",
              "description": "User that we want to create",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New user is created",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get all users in system",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Users"
              }
            }
          }
        }
      },
      "/users/{userId}": {
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "ID of user that we want to find",
            "type": "string"
          }
        ],
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get user with given ID",
          "responses": {
            "200": {
              "description": "User is found",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "delete": {
          "summary": "Delete user with given ID",
          "tags": [
            "Users"
          ],
          "responses": {
            "200": {
              "description": "User is deleted",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      },
      "/posts": {
        "post": {
          "tags": [
            "Posts"
          ],
          "description": "Create new post in system",
          "parameters": [
            {
              "name": "post",
              "in": "body",
              "description": "Post that we want to create",
              "schema": {
                "$ref": "#/definitions/Post"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New post is created",
              "schema": {
                "$ref": "#/definitions/Post"
              }
            }
          }
        },
        "get": {
          "tags": [
            "Posts"
          ],
          "summary": "Get all posts in system",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Posts"
              }
            }
          }
        }
      },
      "/posts/{postId}": {
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "description": "ID of post that we want to find",
            "type": "string"
          }
        ],
        "get": {
          "tags": [
            "Posts"
          ],
          "summary": "Get post with given ID",
          "responses": {
            "200": {
              "description": "Post is found",
              "schema": {
                "$ref": "#/definitions/Post"
              }
            }
          }
        },
        "delete": {
          "summary": "Delete post with given ID",
          "tags": [
            "Posts"
          ],
          "responses": {
            "200": {
              "description": "Post is deleted",
              "schema": {
                "$ref": "#/definitions/Post"
              }
            }
          }
        }
      }
    },
    "definitions": {
      "User": {
        "required": [
          "name",
          "password"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "uniqueItems": true
          },
          "name": {
            "type": "string",
            "uniqueItems": true
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Users": {
        "type": "array",
        "$ref": "#/definitions/User"
      },
      "Post": {
        "required": [
          "title",
          "description"
        ],
        "properties": {
          "_id": {
            "type": "integer",
            "uniqueItems": true
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Posts": {
        "type": "array",
        "$ref": "#/definitions/Post"
      }
    }
  }
  